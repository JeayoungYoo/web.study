[개발자테스트]

테스팅의 개념과 테스트의 필요성에 대하여 설명하시오.

테스팅은 일반적으로 작업이 끝난 후, 처음에 요구된 것과 현재 상태의 차이를
발견하기 위해 
수행하는 활동이다. 제품이 만들어지고 난 뒤 요구된 기능들이 제대로 작동하는지를 확인하는 
활동도 테스팅의 일종이라고 할 수 있다.


코드에 존재하는 결함은 장애의 원인이 된다. 
또한 방사, 자기, 전자기장, 물리적 오염이 소프트웨어의 결함을 유발시킬 수 있다. 
이러한 환경적인 조건이 하드웨어 조건을 변경시켜 소프트웨어의 실행에 영향을 미칠 수 있다.
 테스팅은 개발과정에서 소프트웨어의 품질을 높이고, 소프트웨어가 고객에게 전달된 이후에 
결함이 발생할 가능성을 최소화한다. 
발견하지 못했던 시스템 또는 문서의 결함들을 체계적인 테스팅을 통해 배포 이전에 발견하고 
수정한다면, 운영 환경 내에서 발생하는 결함들의 리스크를 줄이는 데 기여할 수 있으며, 
소프트웨어 품질 향상에도 도움을 준다.


테스트를 수행한 범위를 뜻하는 테스트 커버리지 중에서 코드 커버리지와 
코드 커버리지의 측정 기준이 되는 것들에 대하여 설명하시오.

코드 커버리지는 소프트웨어의 테스트를 논할 때 얼마나 테스트가 충분한가를 
나타내는 
지표 중 하나다. 
소프트웨어 테스트를 진행했을 때 코드 자체가 얼마나 실행되었냐를 나타낸다.

코드의 구조를 이루는 것은 크게 구문(Statement), 조건(Condition), 결정(Decision)
이며 
이러한 구조를 얼마나 커버했느냐에 따라 코드 커버리지의 측정 기준은 나누게 된다.

구문 커버리지는 일반적으로 많이 사용되는 커버리지로, 실행 코드 라인이 한 번 이상 실행되면
 충족된다.

조건 커버리지는 각 내부 조건이 참 혹은 거짓을 가지면 충족된다.

결정 커버리지는 각 분기의 내부 조건 자체가 아닌 이러한 조건으로 인해 전체 결과가 
참 혹은 거짓이면 충족된다.


정보시스템 이행을 위한 마스터플랜(ISMP) 방법론 정의 단계

1. 프로젝트 착수 및 참여자 결정
2. 정보시스템 방향성 수립 
3. 업무 및 정보기술 요건 분석 

4. 정보시스템 구조 및 요건 정의
5. 정보시스템 구축사업 이행방안 수립



정보시스템 통합 이행 계획 수립의 절차

1. 이행과제 정의

2. 소요자원 분석

3. 기대효과 분석
4. 우선순위 선정

5. 마스터플랜 수립

6. 변화관리 방안 수립











